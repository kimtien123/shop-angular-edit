{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from '../../account/shared/auth.service';\nimport { take, map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../account/shared/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AdminGuard = /*#__PURE__*/(() => {\n  class AdminGuard {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n\n    canActivate(next, state) {\n      return this.authService.user.pipe(take(1), map(user => {\n        var _a;\n\n        return user && ((_a = user === null || user === void 0 ? void 0 : user.roles) === null || _a === void 0 ? void 0 : _a.admin) ? true : false;\n      }), tap(authorized => {// if (!authorized) {\n        //   this.router.navigate(['/register-login']);\n        // }\n      }));\n    }\n\n  }\n\n  AdminGuard.ɵfac = function AdminGuard_Factory(t) {\n    return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n\n  AdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminGuard,\n    factory: AdminGuard.ɵfac\n  });\n  return AdminGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}