{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { MessageService } from '../../../messages/message.service';\nimport { Product } from '../../../models/product.model';\nimport { Category } from '../../../models/category.model';\nimport { CategoryService } from '../../../account/category/shared/category.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../account/category/shared/category.service\";\nimport * as i3 from \"../../../messages/message.service\";\nimport * as i4 from \"../../../core/page-title/page-title.component\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = [\"photos\"];\n\nfunction AddEditCategoryComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Shucks, enter a name for your product. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditCategoryComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Shucks, enter a date for your category. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditCategoryComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Shucks, enter a description for your category. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = function () {\n  return {\n    title: \"Add/Edit Category\"\n  };\n};\n\nconst _c2 = function (a0) {\n  return [a0];\n}; // we send and receive categories as {key:true},\n// but for the input field we need\n// a product with categories of type string\n\n\nexport class DomainProduct extends Product {}\nexport let AddEditCategoryComponent = /*#__PURE__*/(() => {\n  class AddEditCategoryComponent {\n    constructor(router, route, categoryService, log) {\n      this.router = router;\n      this.route = route;\n      this.categoryService = categoryService;\n      this.log = log;\n    }\n\n    ngOnInit() {\n      this.setProduct();\n    }\n\n    initForm() {\n      this.categoryForm = new FormGroup({\n        name: new FormControl(this.category && this.category.name, Validators.required),\n        id: new FormControl({\n          value: this.category && this.category.id,\n          disabled: true\n        }, [Validators.required, Validators.min(0)]),\n        date: new FormControl(this.category && this.category.date, Validators.required),\n        description: new FormControl(this.category && this.category.description, Validators.required)\n      });\n      this.onFormChanges();\n    }\n\n    setProduct() {\n      this.route.params.subscribe(params => {\n        this.id = +this.route.snapshot.paramMap.get('id'); // if we have an id, we're in edit mode\n\n        if (this.id) {\n          this.mode = 'edit';\n          this.getCate(this.id);\n          this.initForm();\n        } else {\n          // else we are in add mode\n          this.mode = 'add';\n          this.constructCate();\n          this.initForm();\n        }\n      });\n    }\n\n    constructCate() {\n      const product = this.constructMockCate();\n      this.syncProduct(product);\n      this.initForm();\n    }\n\n    getCate(id) {\n      this.productSubscription = this.categoryService.getCategory(id).subscribe(cate => {\n        console.log('CategoryCategory', cate);\n\n        if (cate) {\n          this.syncProduct(cate);\n          this.initForm();\n        }\n      });\n    }\n\n    onFormChanges() {\n      this.formSubscription = this.categoryForm.valueChanges.subscribe(formFieldValues => {\n        const product = Object.assign(Object.assign({}, this.category), formFieldValues);\n        this.syncProduct(product);\n      });\n    }\n\n    syncProduct(category) {\n      const id = this.createId(category);\n      this.category = Object.assign(Object.assign({}, category), {\n        id\n      });\n    }\n\n    onSubmit() {\n      this.syncProduct(Object.assign(Object.assign({}, this.category), this.categoryForm.value));\n      const cateToSubmit = this.category;\n\n      if (this.mode === 'add') {\n        this.addCate(cateToSubmit);\n      } else if (this.mode === 'edit') {\n        this.updateProduct(cateToSubmit);\n      } else {\n        this.log.addError('Please provide a file for your product');\n        return;\n      }\n    }\n\n    addCate(category) {\n      this.categoryService.addCategory(category).subscribe(savedProduct => {\n        this.category = null;\n        this.router.navigate(['/admin/category/list']);\n      }, error => {\n        this.log.addError('Could not upload your product');\n        return of(error);\n      });\n    }\n\n    updateProduct(category) {\n      this.productSubscription.unsubscribe();\n      this.categoryService.updateCategory(category).subscribe(response => {\n        this.router.navigate(['/admin/category/edit/' + response.id]);\n      }, error => this.log.addError('Could not update your product'));\n    }\n\n    onDelete() {\n      if (this.mode === 'edit') {\n        this.productSubscription.unsubscribe();\n        this.categoryService.deleteCategory(this.category).then(res => {\n          this.router.navigate(['admin/category/list']);\n        });\n      } else {\n        this.log.addError(`Cannot delete new product`);\n      }\n    } // pure helper functions start here:\n\n\n    constructMockCate() {\n      return new Category();\n    }\n\n    constructProductToSubmit(product) {\n      return Object.assign(Object.assign({}, product), {\n        categories: this.categoriesFromStringToObject(product.categories)\n      });\n    }\n\n    createId(product) {\n      const randomId = Math.floor(Math.random() * new Date().getTime());\n      let id = product.id || randomId;\n\n      if (id === 1) {\n        id = randomId;\n      }\n\n      return id;\n    }\n\n    categoriesFromObjectToString(categories) {\n      // categories: { key: true, key: true} || {}\n      if (Object.keys(categories).length === 0) {\n        return 'example, category';\n      }\n\n      return Object.keys(categories).reduce((result, currentProduct, index, inputArray) => {\n        if (index < inputArray.length - 1) {\n          return result + currentProduct + ',';\n        }\n\n        return result + currentProduct;\n      }, '');\n    }\n\n    categoriesFromStringToObject(categories) {\n      // categories: 'cat1, cat2, cat3' || ''\n      if (categories.length === 0) {\n        return {};\n      }\n\n      return categories.split(',').reduce((combinedCategories, currentCategory) => {\n        combinedCategories[currentCategory.trim()] = true;\n        return combinedCategories;\n      }, {});\n    }\n\n    checkForSale(reduction) {\n      return reduction > 0;\n    }\n\n    calculateReduction(priceNormal, price) {\n      const reduction = Math.round((priceNormal - price) / priceNormal * 100);\n      return reduction > 0 ? reduction : 0;\n    }\n\n    handleImageURLs(product) {\n      if (product.imageURLs && product.imageURLs.length > 0) {\n        return product.imageURLs;\n      }\n\n      return [];\n    }\n\n    ngOnDestroy() {\n      this.formSubscription.unsubscribe();\n    }\n\n  }\n\n  AddEditCategoryComponent.ɵfac = function AddEditCategoryComponent_Factory(t) {\n    return new (t || AddEditCategoryComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.MessageService));\n  };\n\n  AddEditCategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditCategoryComponent,\n    selectors: [[\"app-add-edit-category\"]],\n    viewQuery: function AddEditCategoryComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.photos = _t.first);\n      }\n    },\n    decls: 32,\n    vars: 10,\n    consts: [[\"title\", \"Add/Edit Category\", 3, \"children\"], [1, \"container\"], [1, \"row\", \"mb-5\"], [1, \"col-lg-8\"], [1, \"margin-bottom-1x\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [\"for\", \"name\", 1, \"col-2\", \"col-form-label\"], [1, \"col-10\"], [\"formControlName\", \"name\", \"type\", \"text\", \"id\", \"name\", \"value\", \"\", 1, \"form-control\", \"form-control-square\", \"form-control-sm\"], [\"class\", \"form-control-feedback\", 4, \"ngIf\"], [\"for\", \"date-input\", 1, \"col-2\", \"col-form-label\"], [\"type\", \"date\", \"id\", \"date-input\", \"formControlName\", \"date\", \"value\", \"\", 1, \"form-control\"], [\"for\", \"description\", 1, \"col-2\", \"col-form-label\"], [\"formControlName\", \"description\", \"id\", \"description\", \"rows\", \"5\", 1, \"form-control\", \"form-control-square\", \"form-control-sm\"], [1, \"col\", \"text-right\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"form-control-feedback\"]],\n    template: function AddEditCategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-page-title\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4);\n        i0.ɵɵtext(5, \"Add/Edit Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditCategoryComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵtemplate(12, AddEditCategoryComponent_div_12_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Creation Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 8);\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵtemplate(18, AddEditCategoryComponent_div_18_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 13);\n        i0.ɵɵtext(21, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 8)(23, \"textarea\", 14);\n        i0.ɵɵtext(24, \"            \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, AddEditCategoryComponent_div_25_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 2)(27, \"div\", 15)(28, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function AddEditCategoryComponent_Template_button_click_28_listener() {\n          return ctx.onDelete();\n        });\n        i0.ɵɵtext(29, \"Delete category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 17);\n        i0.ɵɵtext(31, \"Save Changes\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"children\", i0.ɵɵpureFunction1(8, _c2, i0.ɵɵpureFunction0(7, _c1)));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.categoryForm.get(\"name\").valid && ctx.categoryForm.get(\"name\").touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.categoryForm.get(\"date\").valid && ctx.categoryForm.get(\"date\").touched);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.categoryForm.get(\"description\").valid && ctx.categoryForm.get(\"description\").touched);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.mode === \"add\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.categoryForm.invalid);\n      }\n    },\n    directives: [i4.PageTitleComponent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i6.NgIf],\n    styles: [\".progress[_ngcontent-%COMP%]{height:auto;border-radius:9px;background-color:#f0f0f0;font-size:13px;font-weight:500;line-height:18px}.progress-bar[_ngcontent-%COMP%]{height:18px;background-color:#0da9ef}\"]\n  });\n  return AddEditCategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}